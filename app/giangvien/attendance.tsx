import { Ionicons } from "@expo/vector-icons";
import { Stack, useRouter } from "expo-router";
import React, { useMemo } from "react";
import { FlatList, StyleSheet, Text, TouchableOpacity, View } from "react-native";

// --- D·ªÆ LI·ªÜU L·ªäCH D·∫†Y GI·∫¢ ƒê·ªäNH (C·∫ßn ƒë·ªìng b·ªô v·ªõi c√°c file kh√°c) ---
// Gi·∫£ ƒë·ªãnh d·ªØ li·ªáu n√†y m√¥ ph·ªèng c√°c l·ªõp Gi·∫£ng vi√™n ƒëang ph·ª• tr√°ch
const MOCK_CLASSES_TODAY = [
    { id: 'L101', name: 'IELTS Writing (G3)', teacher: 'T√∫ S∆∞∆°ng', status: 'S·∫Øp t·ªõi', time: '17:30 - 19:00', color: '#ff7043' },
    { id: 'L102', name: 'TOEIC Giao Ti·∫øp (B2)', teacher: 'T√∫ S∆∞∆°ng', status: 'ƒêang di·ªÖn ra', time: '19:00 - 20:30', color: '#28a745' }, // L·ªõp n√†y ƒêANG H·ªåC
    { id: 'L103', name: 'Ng·ªØ Ph√°p N√¢ng Cao', teacher: 'T√∫ S∆∞∆°ng', status: 'ƒê√£ ho√†n th√†nh', time: '14:00 - 15:30', color: '#6c757d' },
    { id: 'L104', name: 'IELTS Speaking', teacher: 'T√∫ S∆∞∆°ng', status: 'ƒêang di·ªÖn ra', time: '20:30 - 22:00', color: '#007bff' }, // L·ªõp n√†y ƒêANG H·ªåC
    { id: 'L105', name: 'T·ªïng √¥n Ng·ªØ Ph√°p', teacher: 'T√∫ S∆∞∆°ng', status: 'S·∫Øp t·ªõi', time: '10:00 - 11:30', color: '#ff7043' },
];

const STATUS_COLORS = {
    'ƒêang di·ªÖn ra': '#28a745',
    'S·∫Øp t·ªõi': '#ffc107',
    'ƒê√£ ho√†n th√†nh': '#6c757d',
};
const ACCENT_COLOR = '#ff7043'; // M√†u ch·ªß ƒë·∫°o Gi·∫£ng vi√™n


// --- COMPONENT PH·ª§: Th·∫ª L·ªõp h·ªçc ---
const ClassAttendanceCard: React.FC<{ item: any, onPress: (item: any) => void }> = ({ item, onPress }) => {
    const isOngoing = item.status === 'ƒêang di·ªÖn ra';
    const cardColor = STATUS_COLORS[item.status] || '#ccc';

    return (
        <TouchableOpacity
            style={[
                styles.classCard,
                { borderLeftColor: cardColor },
                !isOngoing && styles.classCardDisabled // √Åp d·ª•ng style m·ªù n·∫øu kh√¥ng ho·∫°t ƒë·ªông
            ]}
            onPress={() => isOngoing && onPress(item)} // Ch·ªâ cho ph√©p nh·∫•n n·∫øu ƒêang di·ªÖn ra
            disabled={!isOngoing}
        >
            <View style={styles.cardContent}>
                <Text style={styles.cardClassName}>{item.name}</Text>
                <Text style={styles.cardTime}>{item.time}</Text>
            </View>
            
            <View style={styles.cardStatusContainer}>
                <Text style={[styles.statusTag, { backgroundColor: cardColor, color: isOngoing ? 'white' : '#333' }]}>
                    {item.status.toUpperCase()}
                </Text>
                {isOngoing && <Ionicons name="chevron-forward-outline" size={24} color={ACCENT_COLOR} />}
            </View>
        </TouchableOpacity>
    );
};
// ------------------------------------


export default function GiangVienDiemDanhScreen() {
    const router = useRouter(); 
    
    // üî• L·ªåC DANH S√ÅCH CH·ªà HI·ªÇN TH·ªä L·ªöP C√ì TR·∫†NG TH√ÅI 'ƒêang di·ªÖn ra'
    const ongoingClasses = useMemo(() => {
        // L·ªõp ƒêang di·ªÖn ra s·∫Ω ƒë∆∞·ª£c ƒë∆∞a l√™n ƒë·∫ßu
        return MOCK_CLASSES_TODAY.sort((a, b) => {
            if (a.status === 'ƒêang di·ªÖn ra' && b.status !== 'ƒêang di·ªÖn ra') return -1;
            if (a.status !== 'ƒêang di·ªÖn ra' && b.status === 'ƒêang di·ªÖn ra') return 1;
            return 0;
        });
    }, []);

    // H√†m ƒëi·ªÅu h∆∞·ªõng ƒë·∫øn trang chi ti·∫øt ƒëi·ªÉm danh
    const handleNavigateToDetail = (classItem: any) => {
        // Chuy·ªÉn h∆∞·ªõng, truy·ªÅn c√°c tham s·ªë c·∫ßn thi·∫øt
        router.push({
            pathname: '/giangvien/attendance_detail', 
            params: { 
                classId: classItem.id, 
                className: classItem.name,
                time: classItem.time,
                course: 'Kho√° h·ªçc XXX' // C·∫ßn truy·ªÅn th√™m th√¥ng tin kh√≥a h·ªçc n·∫øu c√≥
            }
        });
    };

    return (
        <View style={styles.mainContainer}>
            <Stack.Screen options={{ title: 'ƒêi·ªÉm danh L·ªõp' }} />

            <View style={styles.header}>
                <Text style={styles.headerTitle}>Ch·ªçn L·ªõp ƒë·ªÉ ƒêi·ªÉm danh</Text>
                <Text style={styles.headerSubtitle}>Ch·ªâ c√≥ c√°c l·ªõp ƒêANG DI·ªÑN RA m·ªõi c√≥ th·ªÉ ƒëi·ªÉm danh.</Text>
            </View>

            {/* DANH S√ÅCH L·ªöP C√ì TH·ªÇ ƒêI·ªÇM DANH */}
            <FlatList
                data={ongoingClasses}
                keyExtractor={item => item.id}
                renderItem={({ item }) => (
                    <ClassAttendanceCard item={item} onPress={handleNavigateToDetail} />
                )}
                contentContainerStyle={styles.listContent}
                ListEmptyComponent={() => (
                    <View style={styles.emptyContainer}>
                        <Ionicons name="alert-circle-outline" size={40} color="#666" />
                        <Text style={styles.emptyText}>Hi·ªán kh√¥ng c√≥ l·ªõp n√†o ƒëang di·ªÖn ra.</Text>
                    </View>
                )}
            />
            
            <TouchableOpacity style={styles.viewFullScheduleButton} onPress={() => router.push('/giangvien/full_schedule')}>
                <Text style={styles.viewFullScheduleText}>Xem to√†n b·ªô L·ªãch D·∫°y</Text>
            </TouchableOpacity>
            
        </View>
    );
}


const styles = StyleSheet.create({
    mainContainer: { flex: 1, backgroundColor: '#f0f3f5' },
    header: { padding: 15, backgroundColor: 'white', borderBottomWidth: 1, borderBottomColor: '#eee', marginBottom: 5 },
    headerTitle: { fontSize: 20, fontWeight: '900', color: ACCENT_COLOR },
    headerSubtitle: { fontSize: 14, color: '#666', marginTop: 5 },

    listContent: { paddingHorizontal: 15, paddingVertical: 10 },
    
    // Th·∫ª L·ªõp h·ªçc
    classCard: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        backgroundColor: 'white',
        borderRadius: 8,
        padding: 15,
        marginBottom: 10,
        borderLeftWidth: 5, // Vi·ªÅn m√†u tr·∫°ng th√°i
        elevation: 2,
        shadowOpacity: 0.05,
    },
    classCardDisabled: {
        opacity: 0.5, // L√†m m·ªù c√°c l·ªõp kh√¥ng th·ªÉ ƒëi·ªÉm danh
    },
    cardContent: { flex: 1, marginRight: 10 },
    cardClassName: { fontSize: 16, fontWeight: '600', color: '#333' },
    cardTime: { fontSize: 14, color: '#666', marginTop: 3 },
    
    cardStatusContainer: { flexDirection: 'row', alignItems: 'center' },
    statusTag: {
        paddingHorizontal: 8,
        paddingVertical: 4,
        borderRadius: 15,
        fontSize: 10,
        fontWeight: 'bold',
        marginRight: 10,
        overflow: 'hidden',
    },

    // Footer/Button
    viewFullScheduleButton: {
        padding: 15,
        backgroundColor: 'white',
        borderTopWidth: 1,
        borderTopColor: '#eee',
        alignItems: 'center',
    },
    viewFullScheduleText: {
        color: ACCENT_COLOR,
        fontWeight: 'bold',
    },
    emptyContainer: { alignItems: 'center', paddingVertical: 40 },
    emptyText: { color: '#666', marginTop: 10, fontSize: 16 },
});